name: Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags like v24.04.0

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.7"

      - name: Extract version without 'v'
        id: version
        run: echo "tag=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Build and package binary
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist

          EXT=""
          ARCHIVE_EXT=""
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            EXT=".exe"
            ARCHIVE_EXT="zip"
          else
            ARCHIVE_EXT="tar.gz"
          fi

          BIN_NAME="szczecin-${{ matrix.goos }}-${{ matrix.goarch }}$EXT"
          ARCHIVE_NAME="szczecin-${{ matrix.goos }}-${{ matrix.goarch }}.${ARCHIVE_EXT}"
          BUILD_PATH="dist/$BIN_NAME"
          ARCHIVE_PATH="dist/$ARCHIVE_NAME"

          echo "Building $BIN_NAME..."

          env CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -ldflags="-s -w" -o "$BUILD_PATH" .

          # Ensure it's executable if Unix-based
          if [[ "${{ matrix.goos }}" != "windows" ]]; then
            chmod +x "$BUILD_PATH"
            tar -czf "$ARCHIVE_PATH" -C dist "$BIN_NAME"
          else
            zip -j "$ARCHIVE_PATH" "$BUILD_PATH"
          fi

          echo "Packaged: $ARCHIVE_PATH"

      - name: Upload archives to GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
          name: ${{ steps.version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
