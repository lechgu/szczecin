name: Release

on:
  push:
    tags:
      - "v*" # Trigger only on tags like v24.04.0

env:
  BIN_NAME: szczecin           # ðŸ”§ Change this to your binary name
  GO_VERSION: "1.21.7"         # ðŸ”§ Change Go version as needed

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build and archive binary
        shell: bash
        run: |
          set -euo pipefail

          EXT=""
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            EXT=".exe"
          fi

          BIN="${BIN_NAME}${EXT}"
          ARCHIVE_NAME="${BIN_NAME}-${{ matrix.goos }}-${{ matrix.goarch }}"
          mkdir -p out

          echo "Building $BIN for ${{ matrix.goos }}/${{ matrix.goarch }}..."
          env CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -ldflags="-s -w" -o "$BIN" .

          echo "Packaging $ARCHIVE_NAME..."

          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            zip "out/$ARCHIVE_NAME.zip" "$BIN"
          else
            tar -czf "out/$ARCHIVE_NAME.tar.gz" "$BIN"
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          # ðŸ‘‡ Strip the leading 'v' from the release name
          name: ${{ github.ref_name.startsWith('v') && github.ref_name != 'v' && github.ref_name != '' ? github.ref_name.substring(1) : github.ref_name }}
          files: out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
